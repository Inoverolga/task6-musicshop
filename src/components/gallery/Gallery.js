// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç InfiniteScroll –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
import InfiniteScroll from "react-infinite-scroll-component";
import { BeatLoader } from "react-spinners";
import { Row, Col, Card } from "react-bootstrap";
//import "./gallery.scss";

const Gallery = ({ songs, onLoadMore, hasMore }) => {
  // - songs: –º–∞—Å—Å–∏–≤ –ø–µ—Å–µ–Ω –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  // - onLoadMore: —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ª–µ–¥—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
  // - hasMore: –±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å—Ç—å –ª–∏ –µ—â–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏

  return (
    <InfiniteScroll
      key={songs.length} // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á –∫–æ—Ç–æ—Ä—ã–π –º–µ–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ
      dataLength={songs.length} // –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      next={onLoadMore} // –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç –∫ –∫–æ–Ω—Ü—É
      // –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ª–µ–¥—É—é—â—É—é –ø–æ—Ä—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö
      hasMore={hasMore} // –§–ª–∞–≥, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –µ—Å—Ç—å –ª–∏ –µ—â–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏, –ï—Å–ª–∏ false - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è endMessage
      loader={
        // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        <div className="infinite-loader">
          <BeatLoader color="#007bff" size={15} />
          <h4>Loading more songs...</h4>
        </div>
      }
      // –°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
      endMessage={
        <div className="infinite-end">
          <p>üéâ You've reached the end! No more songs.</p>
        </div>
      }
      // –ü–æ—Ä–æ–≥ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ (–≤ –¥–æ–ª—è—Ö –æ—Ç –≤—ã—Å–æ—Ç—ã –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞)
      // 0.8 = –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –∫–æ–≥–¥–∞ –¥–æ –∫–æ–Ω—Ü–∞ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è 80% –≤—ã—Å–æ—Ç—ã –≤–∏–¥–∏–º–æ–π –æ–±–ª–∞—Å—Ç–∏
      scrollThreshold={0.8}
    >
      <Row className="g-4">
        {songs.map((song) => (
          <Col key={song.id} xs={12} sm={6} lg={4} xl={3}>
            <Card className="song-card-custom h-100">
              <div
                className="album-cover-custom"
                style={{
                  height: "200px",
                  backgroundColor: `hsl(${(song.id * 30) % 360}, 70%, 80%)`,
                  backgroundImage:
                    "linear-gradient(45deg, rgba(255,255,255,0.2) 25%, transparent 25%, transparent 50%, rgba(255,255,255,0.2) 50%, rgba(255,255,255,0.2) 75%, transparent 75%, transparent)",
                }}
              >
                <div className="cover-content h-100 d-flex flex-column justify-content-center text-white p-3">
                  <Card.Title className="fw-bold">{song.title}</Card.Title>
                  <Card.Text className="mb-0">{song.artist}</Card.Text>
                </div>
              </div>

              <Card.Body className="d-flex flex-column">
                <Card.Text className="text-muted small mb-3">
                  {song.album} ‚Ä¢ {song.genre}
                </Card.Text>

                <div className="mt-auto d-flex justify-content-between align-items-center">
                  <small className="text-danger">‚ù§Ô∏è {song.likes}</small>
                  <small className="text-secondary">‚è±Ô∏è {song.duration}</small>
                </div>
              </Card.Body>
            </Card>
          </Col>
        ))}
      </Row>
    </InfiniteScroll>
  );
};

export default Gallery;
